# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@2.4.0

executors:
  node:
    docker:
      - image: circleci/node:12.22.7-browsers
    working_directory: ~/embeddable-explorer

commands:
  npm-install:
    steps:
      - run:
          name: Installs npm version from package.jsons engines field
          command: |
            ENGINES_NPM_VERSION=`node -e "console.log(require('./package.json').engines.npm)"`;
            sudo npm i -g npm@$ENGINES_NPM_VERSION;
            npm -v;

      - restore_cache:
          name: Restore npm cache
          keys:
            - npm-cache--{{ checksum "package-lock.json" }}--{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install npm dependencies with `npm ci`
          command: npm ci --prefer-offline
      - save_cache:
          name: Save npm caches
          key: npm-cache--{{ checksum "package-lock.json" }}--{{ checksum ".circleci/config.yml" }}
          paths:
            - ~/.npm
jobs:
  eslint:
    executor: node
    steps:
      - checkout
      - npm-install
      - run:
          name: Ensure output directory exists
          command: mkdir -p /tmp/test-reports/eslint
      - restore_cache:
          name: Restore eslint cache
          keys:
            - raw-eslint-cache--{{ checksum ".eslintrc.js" }}--{{ .Branch }}--{{ checksum ".circleci/config.yml" }}
            - raw-eslint-cache--{{ checksum ".eslintrc.js" }}--main--{{ checksum ".circleci/config.yml" }}
      - run:
          name: Linter
          command: npm run lint -- --quiet --format junit --output-file /tmp/test-reports/eslint/results.xml
      - save_cache:
          name: Save eslint cache
          key: raw-eslint-cache--{{ checksum ".eslintrc.js" }}--{{ .Branch }}--{{ checksum ".circleci/config.yml" }}--{{ epoch }}
          paths:
            - .eslintcache
      - store_test_results:
          path: /tmp/test-reports
  prettier:
    executor: node
    steps:
      - checkout
      - npm-install
      - run: 
          name: Prettier
          command: npm run prettier:check

  typescript:
    executor: node
    steps:
      - checkout
      - npm-install
      - run:
          name: TypeScript
          command: npm run typescript:check

  build-latest-umd-explorer:
    executor: node
    steps:
      - checkout
      - npm-install
      - run:
          name: Build
          command: '[ -d build ] || PUBLIC_URL=https://embeddable-explorer.cdn.apollographql.com/_latest npm run build-explorer:umd -- --no-progress'
          environment:
            BUILD_TO_CDN: 'true'
      - persist_to_workspace:
          root: ~/embeddable-explorer
          paths:
            - dist

  build-versioned-umd-explorer:
    executor: node
    steps:
      - checkout
      - npm-install
      - run:
          name: Build
          command: '[ -d build ] || PUBLIC_URL=https://embeddable-explorer.cdn.apollographql.com/$CIRCLE_SHA1 npm run build-explorer:umd -- --no-progress'
          environment:
            BUILD_TO_CDN: 'true'
      - persist_to_workspace:
          root: ~/embeddable-explorer
          paths:
            - dist

  cdn-upload-latest-explorer:
    executor: gcp-cli/google
    steps:
      - gcp-cli/initialize:
          gcloud-service-key: GCLOUD_GCS_SERVICE_KEY
      - gcp-cli/install
      - checkout
      - attach_workspace:
          at: ~/embeddable-explorer
      - run:
          name: Upload build artifacts to CDN
          command: |
            gsutil -m rsync -r ~/embeddable-explorer/dist gs://embeddable-explorer/_latest

  cdn-upload-versioned-explorer:
    executor: gcp-cli/google
    steps:
      - gcp-cli/initialize:
          gcloud-service-key: GCLOUD_GCS_SERVICE_KEY
      - gcp-cli/install
      - checkout
      - attach_workspace:
          at: ~/embeddable-explorer
      - run:
          name: Upload build artifacts to CDN
          command: |
            gsutil -m rsync -r ~/embeddable-explorer/dist gs://embeddable-explorer/$CIRCLE_SHA1

  build-latest-umd-sandbox:
    executor: node
    steps:
      - checkout
      - npm-install
      - run:
          name: Build
          command: '[ -d build ] || PUBLIC_URL=https://embeddable-explorer.cdn.apollographql.com/_latest npm run build-explorer:umd -- --no-progress'
          environment:
            BUILD_TO_CDN: 'true'
      - persist_to_workspace:
          root: ~/embeddable-explorer
          paths:
            - dist

  build-versioned-umd-sandbox:
    executor: node
    steps:
      - checkout
      - npm-install
      - run:
          name: Build
          command: '[ -d build ] || PUBLIC_URL=https://embeddable-sandbox.cdn.apollographql.com/$CIRCLE_SHA1 npm run build-sandbox:umd -- --no-progress'
          environment:
            BUILD_TO_CDN: 'true'
      - persist_to_workspace:
          root: ~/embeddable-explorer
          paths:
            - dist

  cdn-upload-latest-sandbox:
    executor: gcp-cli/google
    steps:
      - gcp-cli/initialize:
          gcloud-service-key: GCLOUD_GCS_SERVICE_KEY
      - gcp-cli/install
      - checkout
      - attach_workspace:
          at: ~/embeddable-explorer
      - run:
          name: Upload build artifacts to CDN
          command: |
            gsutil -m rsync -r ~/embeddable-sandbox/dist gs://embeddable-sandbox/_latest

  cdn-upload-versioned-sandbox:
    executor: gcp-cli/google
    steps:
      - gcp-cli/initialize:
          gcloud-service-key: GCLOUD_GCS_SERVICE_KEY
      - gcp-cli/install
      - checkout
      - attach_workspace:
          at: ~/embeddable-sandbox
      - run:
          name: Upload build artifacts to CDN
          command: |
            gsutil -m rsync -r ~/embeddable-sandbox/dist gs://embeddable-sandbox/$CIRCLE_SHA1


workflows:
  build-test-deploy:
    jobs:
      - eslint
      - prettier
      - typescript
      - build-latest-umd-explorer
      - cdn-upload-latest-explorer:
          requires:
            - build-latest-umd-explorer
          filters:
            branches:
              only: main
      - build-versioned-umd-explorer:
          requires:
            - cdn-upload-latest-explorer
      - cdn-upload-versioned-explorer:
          requires:
            - build-versioned-umd-explorer
          filters:
            branches:
              only: main
      - build-latest-umd-sandbox:
          requires:
            - cdn-upload-versioned-explorer
      - cdn-upload-latest-sandbox:
          requires:
            - build-latest-umd-sandbox
          filters:
            branches:
              only: main
      - build-versioned-umd-sandbox:
          requires:
            - cdn-upload-latest-sandbox
      - cdn-upload-versioned-sandbox:
          requires:
            - build-versioned-umd-sandbox
          filters:
            branches:
              only: main
      # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
      # - node/test
